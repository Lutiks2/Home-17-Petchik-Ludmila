/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}@font-face{font-family:"HelveticaMedium";src:url("../fonts/HelveticaMedium/HelveticaMedium.eot");src:url("../fonts/HelveticaMedium/HelveticaMedium.eot?#iefix") format("embedded-opentype"),url("../fonts/HelveticaMedium/HelveticaMedium.woff") format("woff"),url("../fonts/HelveticaMedium/HelveticaMedium.ttf") format("truetype");font-style:normal;font-weight:normal}@font-face{font-family:"HelveticaRegular";src:url("../fonts/HelveticaRegular/HelveticaRegular.eot");src:url("../fonts/HelveticaRegular/HelveticaRegular.eot?#iefix") format("embedded-opentype"),url("../fonts/HelveticaRegular/HelveticaRegular.woff") format("woff"),url("../fonts/HelveticaRegular/HelveticaRegular.ttf") format("truetype");font-style:normal;font-weight:normal}.container{max-width:1200px;width:100%;margin:0 auto;padding:0 15px}.clearfix:after{content:"";display:block;clear:both}img{width:100%;height:auto;vertical-align:middle}a{text-decoration:none}.main-color{background:#e3e3e3}*:hover{transition:all 0.5s ease}.header{border-top:10px solid #2ecc71;padding-top:95px}.hand{float:right;max-width:439px;padding-right:53px}.welcome{float:left;box-sizing:border-box;padding:72px 0 0 128px}.welcome h1{display:inline-block}.logo{padding-bottom:12px;display:block}.logo img{max-width:183px;padding-bottom:24px}.welcome p{max-width:453px;font:24px "HelveticaMedium", sans-serif;line-height:1.5;color:#fff}.welcome-list{list-style:none;padding-left:0}.footer{padding:60px 0 54px}.footer-nav{margin:0 auto;text-align:center}.footer-nav li{display:inline-block;padding-right:38px}.footer-nav li:last-child{padding-right:0}.footer-nav a{font:16px "HelveticaRegular", sans-serif;color:#848484}.footer-nav a:hover{color:#2ecc71}.welcome-list li{float:left;margin-right:15px}.welcome-list li>a{background:rgba(3,3,3,0.7);border-radius:50px;display:block;padding:10px 15px}.welcome-list li>a:hover{background:#2ecc71}.welcome-list i{font-size:25px;color:#f4f4f4}.features{padding:60px 0}.features-list{padding-left:0;list-style:none}.features-list li{float:left;box-sizing:border-box;max-width:33.3%;text-align:center;font-size:33px}.features-list li:nth-child(2n){padding:0 30px}.features-list li:first-child{padding-right:60px}.features-list li:last-child{padding-left:60px}.features-content{font:400 16px "HelveticaRegular", sans-serif;line-height:1.5;color:#848484}.features-img{max-width:43px;padding:28px 27px 27px 28px;background:#2ecc71;border-radius:50px;display:block;margin:0 auto}.features-img:hover{background:#848484}.features-title{display:block;margin-top:31px;font:600 22px 'Raleway', sans-serif;color:#222}.features-title:hover{color:#2ecc71}.features-single-img{margin:100px auto 50px}.features-single-title{text-align:center}.features-single-content{text-align:justify}.video-form{padding:60px 0}.notified{float:left}.notified h2{margin-bottom:25px;font:600 22px 'Raleway', sans-serif;color:#222}.notified p{max-width:533px;margin-bottom:29px;font:400 16px "HelveticaRegular", sans-serif;color:#848484;line-height:1.5}.notified input{-moz-appearance:none;-webkit-appearance:none;appearence:none}input::-moz-placeholder{color:#848484}input::-webkit-input-placeholder{color:#848484}input::placeholder{color:#848484}.email{padding:22px 120px 20px 26px;border:1px solid #c8c8c8;border-bottom-left-radius:15px;border-top-left-radius:15px;font:400 16px "HelveticaRegular", sans-serif;color:#848484}.submit{color:#fff;background:#2ecc71;border:none;padding:14px 40px 16px 38px;border-bottom-right-radius:15px;border-top-right-radius:15px;font:700 22px 'Raleway', sans-serif;margin:-5px;line-height:1.5}.submit:hover{background:#848484;color:#2ecc71}.video{float:right}.testimonials{padding:60px 0}.testimonials blockquote{max-width:829px;margin:0 auto 26px;text-align:center;font:italic 18px "HelveticaRegular", sans-serif;color:#848484;line-height:1.5}.testimonials-name{display:block;text-align:center;font:700 18px 'Raleway', sans-serif;color:#2e2e2e}.testimonials h2{margin-bottom:21px;text-align:center;font:600 24px 'Raleway', sans-serif;color:#000}.testimonials p{font:14px "HelveticaRegular", sans-serif;color:#848484;text-align:center;margin-bottom:25px}.face-list{display:flex;justify-content:space-around;padding-left:0;list-style:none;margin-bottom:60px}.face-visible{position:relative}.face{max-width:50px}.face-hover{position:absolute;background:#2ecc71;width:50px;height:50px;display:none;top:0;opacity:0.6}.face-visible:hover .face-hover{display:block;transition:all 1s ease}.socials-list{margin-left:0;list-style:none;text-align:center}.socials-list li{display:inline-block;margin-right:10px}.socials-list li:last-child{margin-right:0}.socials img{border-radius:50px;background:#d4d4d4;display:block}.socials img:hover{background:#62d995}.twitter{max-width:17px;padding:12px 8px 9px 9px}.facebook{max-width:9px;padding:9px 13px 8px 12px}.printerest{max-width:20px;padding:6px}.google{max-width:19px;padding:9px 6px 7px 9px}.inst{max-width:15px;padding:9px 9px 10px 10px}.youtobe{max-width:18px;padding:5px 8px 7px}.team{margin:50px auto;text-align:center;font:800 36px 'Raleway', sans-serif;color:#2ecc71}.team-list{padding-left:0;list-style:none}.team-list li{border-bottom:5px dotted #2ecc71}.team-img{max-width:100px;margin:30px auto}.team-title{text-align:center}.team-content{text-align:center}.features-team-img{margin:30px auto;max-width:150px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
